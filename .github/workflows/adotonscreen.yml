name: "üì¶ Build & Release Android Overlay APK"

on:
  push:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /opt/android-sdk

    steps:
      - name: "üì• Checkout source"
        uses: actions/checkout@v3

      - name: "‚òï Setup JDK 11"
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: "üõ†Ô∏è Install Android SDK tools"
        run: |
          sudo mkdir -p $ANDROID_SDK_ROOT
          sudo chown $USER:$USER $ANDROID_SDK_ROOT

          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d cmdline-tools-temp

          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          mv cmdline-tools-temp/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest

          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "platforms;android-30" \
            "build-tools;30.0.3"

      - name: "‚öôÔ∏è Install Gradle CLI"
        run: |
          sudo apt-get update
          sudo apt-get install -y gradle

      - name: "üì¶ Cache Gradle"
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: "üîç Determine Android project root"
        run: |
          PROJECT_ROOT=$(find . -maxdepth 2 -type f -name settings.gradle | head -n1 | xargs dirname)
          echo "Project root: $PROJECT_ROOT"
          echo "PROJECT_ROOT=$PROJECT_ROOT" >> $GITHUB_ENV

      - name: "üöß Build Debug APK"
        run: |
          gradle assembleDebug -p $PROJECT_ROOT --no-daemon

      - name: "üîç Locate APK"
        run: |
          APK=$(find $PROJECT_ROOT -type f -path '*/build/outputs/apk/debug/*.apk' | head -n1)
          echo "Found APK at $APK"
          echo "APK_PATH=$APK" >> $GITHUB_ENV

      - name: "üè∑Ô∏è Create or update 'latest' Release"
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: Android Overlay App (latest)
          body: Automatic build from `${{ github.sha }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "üì§ Upload APK to Release"
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          files: ${{ env.APK_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
