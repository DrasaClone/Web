# .github/workflows/build-android.yml
name: Build WebView APK with In-App Links & Push

on:
  workflow_dispatch:
    inputs:
      push_sender_id:
        description: 'FCM Sender ID for push notifications'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Cordova CLI
        run: npm install -g cordova

      - name: Create Cordova project
        run: |
          rm -rf android-webapp
          mkdir -p android-webapp
          cd android-webapp
          cordova create . com.drasaclone.web WebApp
          cordova platform add android

      - name: Install Cordova plugins
        run: |
          cd android-webapp
          cordova plugin add cordova-plugin-inappbrowser
          cordova plugin add cordova-plugin-background-mode
          cordova plugin add phonegap-plugin-push --variable SENDER_ID="${{ github.event.inputs.push_sender_id }}"

      - name: Patch config.xml
        run: |
          cd android-webapp
          # Allow navigation within app
          sed -i '/<widget /a <allow-navigation href="https://drasaclone.github.io/Web/*" />' config.xml
          # Add POST_NOTIFICATIONS permission
          sed -i '/<platform name="android"/a <edit-config file="AndroidManifest.xml" mode="merge" target="/manifest/uses-permission"><uses-permission android:name="android.permission.POST_NOTIFICATIONS" /></edit-config>' config.xml

      - name: Inject app behavior script
        run: |
          cat <<EOF > android-webapp/www/js/index.js
if (window.cordova) {
  document.addEventListener('deviceready', function() {
    // Open links in app WebView
    window.open = cordova.InAppBrowser.open;

    // Enable background mode
    cordova.plugins.backgroundMode.enable();
    cordova.plugins.backgroundMode.on('activate', function() {
      cordova.plugins.backgroundMode.disableWebViewOptimizations();
    });

    // Initialize Push
    var push = PushNotification.init({ android: { senderID: "${{ github.event.inputs.push_sender_id }}" } });
    push.on('registration', function(data) {
      console.log('Push token:', data.registrationId);
    });
    push.on('notification', function(data) {
      new Notification(data.title || 'Notification', { body: data.message });
    });
  });
}
EOF

      - name: Configure WebView URL
        run: |
          sed -i 's|<content src=.*|<content src="https://drasaclone.github.io/Web/" />|' android-webapp/config.xml

      - name: Build signed debug APK
        run: |
          cd android-webapp
          cordova build android --debug -- --gradleArg=-PcdvBuildMultipleApks=false

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: drasaclone-web-app-debug
          path: android-webapp/platforms/android/app/build/outputs/apk/debug/app-debug.apk

# Note: Cordova debug APK is auto-signed with debug keystore.
# After download, uninstall any old version, enable unknown sources, then install 'app-debug.apk'.
