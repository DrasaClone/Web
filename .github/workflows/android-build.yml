# .github/workflows/build-pwa-apk.yml
name: Build PWA APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Install PWABuilder CLI
        run: npm install -g pwabuilder

      - name: Patch manifest.json
        run: |
          # Ensure manifest.json uses valid purposes
          sed -i 's/"purpose"\s*:\s*"markable"/"purpose":"maskable"/g' manifest.json

      - name: Generate Android project
        run: |
          # Generate Android project using local manifest.json file
          pwabuilder manifest.json \
            --platforms android \
            --directory twa-project

      - name: Build APK
        run: |
          cd twa-project/android
          ./gradlew clean assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: drasaclone-pwa-apk
          path: twa-project/android/app/build/outputs/apk/debug/app-debug.apk

# Notes:
# - This workflow uses PWABuilder CLI to generate an Android project from your PWA.
# - The sed step corrects any 'markable' typos to 'maskable' in manifest.json.
# - The generated APK is a universal, debug-signed APK ready to install on any Android device.
